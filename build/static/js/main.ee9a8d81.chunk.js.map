{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee9a8d81.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>KiekoGram</h1>\n      <h2>This official catagram gallery for Keiko Burke.</h2>\n      <h2 className=\"sub\">No doggies allowed</h2>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDjF-tYOFKB1zjYt6zcMDKHjNY3qjVEZ8c\",\r\n  authDomain: \"reactgram-39f7f.firebaseapp.com\",\r\n  databaseURL: \"https://reactgram-39f7f.firebaseio.com\",\r\n  projectId: \"reactgram-39f7f\",\r\n  storageBucket: \"reactgram-39f7f.appspot.com\",\r\n  messagingSenderId: \"392933537\",\r\n  appId: \"1:392933537:web:9d205184a2b8b45f1400e0\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Invokes the storage\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n// Export\r\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n\r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt = timestamp(); // added timestamp\r\n      collectionRef.add({ url , createdAt }); // specifies the time\r\n      setUrl(url);\r\n    })\r\n  }, [file]);\r\n  \r\n  return { progress, url, error }\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n  \r\n  // Upload file progess and then wipes when uploaded\r\n  useEffect(() => {\r\n    if(url){\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Allowed types\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0]; // targets one file\r\n\r\n    if(selected && types.includes(selected.type)){\r\n      setFile(selected);\r\n      setError(''); // reset to empty string\r\n    } else {\r\n      setFile(null);\r\n      setError('please select the correct image file!');\r\n    }\r\n  }\r\n\r\n  // Reactive to event changechandler above\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n        <p>Add</p>\r\n      </label>\r\n      <div className = \"output\">\r\n        { error && <div className=\"error\"> { error } </div> }\r\n        { file && <div> { file.name } </div>}\r\n        { file && <ProgressBar file={file} setFile={setFile} /> }\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore.collection(collection)\r\n    .orderBy('createdAt', 'desc')\r\n\r\n    .onSnapshot((snap) => {  // everytime there is a change in the images\r\n      let documents = []; // have a empty a array and then cycle through using for each!\r\n      snap.forEach(doc => {\r\n        documents.push({...doc.data(), id: doc.id }) // SPREAD \r\n      });\r\n\r\n      setDocs(documents);\r\n    })\r\n\r\n\r\n    return () => unsub();\r\n  }, [collection])\r\n\r\n  return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n  console.log(docs);\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      { docs && docs.map (doc => (\r\n        <motion.div className=\"img-wrap\" key={doc.id}\r\n          layout\r\n          whileHover={{ opacity : 1 }}\r\n          onClick={() => setSelectedImg(doc.url)} \r\n        >\r\n        <motion.img src={doc.url} alt={\"uploaded_pic\"}\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 0.5 }}\r\n        /> \r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n  // Close the modal on the backdrop\r\n  const handleClick = (e) => {\r\n    if(e.target.classList.contains('backdrop')){\r\n      setSelectedImg(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <motion.div className=\"backdrop\" onClick={handleClick}\r\n      initial={{opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img src={selectedImg} alt=\"enlarged_pic\" \r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\n\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}